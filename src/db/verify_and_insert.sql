-- Start transaction
BEGIN;

-- First, make sure the table exists with the correct structure
CREATE TABLE IF NOT EXISTS faqs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category VARCHAR(255) NOT NULL,
    question TEXT NOT NULL,
    answer TEXT NOT NULL,
    order_num INTEGER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Disable RLS temporarily
ALTER TABLE faqs DISABLE ROW LEVEL SECURITY;

-- Remove any existing data
DELETE FROM faqs WHERE id IS NOT NULL;

-- Insert new FAQ data
INSERT INTO faqs (category, question, answer, order_num) VALUES
('Orders & Shipping', 'How can I track my order?', 'Once your order is shipped, you''ll receive a tracking number via email and SMS. You can use this number to track your order through our website or the courier partner''s tracking portal.', 1),
('Orders & Shipping', 'What are the shipping charges?', 'We offer free standard shipping on orders above ₹2999. For orders below this amount, a flat shipping fee of ₹99 applies. Express delivery is available at an additional cost of ₹199.', 2),
('Returns & Refunds', 'What is your return policy?', 'We accept returns within 30 days of delivery. Items must be unworn, unused, and in their original packaging with all tags attached. Some items like intimate wear and customized products are not eligible for return.', 3),
('Returns & Refunds', 'How long does it take to process a refund?', 'Once we receive your return, refunds are processed within 5-7 business days. The amount will be credited to your original payment method.', 4),
('Product & Sizing', 'How do I find my correct size?', 'You can refer to our detailed size guide available on each product page. We also have a comprehensive size guide section that provides measurements for all our categories.', 5);

-- Verify data was inserted
SELECT COUNT(*) as faq_count FROM faqs;
SELECT category, question FROM faqs ORDER BY order_num;

-- Set up RLS policy
ALTER TABLE faqs ENABLE ROW LEVEL SECURITY;

-- Remove any existing policies
DROP POLICY IF EXISTS "Enable anonymous select" ON faqs;

-- Create simple anonymous read policy
CREATE POLICY "Enable anonymous select" 
ON faqs
FOR SELECT 
TO anon
USING (true);

-- Verify policy
SELECT * FROM pg_policies WHERE tablename = 'faqs';

-- Test anonymous access
SET SESSION ROLE anon;
SELECT COUNT(*) as anon_visible_count FROM faqs;

-- Reset role
RESET ROLE;

-- Commit transaction
COMMIT;
